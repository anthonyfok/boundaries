# Relevant docs:
# https://docs.github.com/en/actions/guides/creating-postgresql-service-containers

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  gpkg-to-pgdump:
    name: GPKG to PostgreSQL dump
    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"

    services:
      postgis:
        image: postgis/postgis
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # See https://github.com/actions/checkout/issues/165
      - name: Cache Git LFS
        uses: actions/cache@v2
        # id: cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('**/*.gpkg') }} # Adapt to target the type of the files committed with git lfs

#          path: |
#                /tmp/docker
#                ${{ github.workspace }}/ccache.tar.gz
#          key: ${{ runner.os }}-build-${{ hashFiles('.github/workflows/ubuntu_20.04/build-deps.sh') }}-${{ github.run_id }}
#          restore-keys: ${{ runner.os }}-build-${{ hashFiles('.github/workflows/ubuntu_20.04/build-deps.sh') }}-

      - name: pre-Housekeeping
        run: |
          ls -l
          df -h /
          whoami
          cat /etc/os-release
          docker ps
          dpkg -l | grep postgres
          psql --version

      - name: Git LFS pull
        run: git lfs pull

      - name: Install gdal-bin from ubuntugis-unstable
        run: |
          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt update
          sudo apt install --no-install-recommends -y gdal-bin

      - name: Run ogr2ogr
        run: |
          set -x
          ogr2ogr --version
          echo "POSTGRES_HOST=$POSTGRES_HOST"
          echo "POSTGRES_HOST=$POSTGRES_HOST"
          echo "POSTGRES_HOST=$POSTGRES_HOST"
          echo "POSTGRES_HOST=$POSTGRES_HOST"
          #ogr2ogr -t_srs "EPSG:4326" -f PostgreSQL PG:"host='$POSTGRES_HOST' user='$POSTGRES_USER' dbname='$DB_NAME' password='$POSTGRES_PASS'" Geometry_PRUID.gpkg -lco LAUNDER=NO -nln boundaries.Geometry_PRUID
          ogr2ogr -t_srs "EPSG:4326" -f PostgreSQL PG:"host='$POSTGRES_HOST' dbname='$DB_NAME' password='$POSTGRES_PASS'" Geometry_PRUID.gpkg -lco LAUNDER=NO -nln boundaries.Geometry_PRUID
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
             
      - name: post-Housekeeping
        run: |
          ls -l
          df -h /
